<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="DatabaseStateMachine" Id="{770f277b-6e28-4759-91b2-1c985738d310}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM DatabaseStateMachine
VAR_INPUT
	
	bStepStart: BOOL:=TRUE;

END_VAR
	
VAR_OUTPUT
	allOutputsSet:BOOL;
END_VAR

VAR
	iState: INT;
	nextLine:ST_ProgramStruct;
	previousLine:ST_ProgramStruct;
	fbTON: TON := (PT := TIME#10S0MS);
	fbScaleValue: scaleValue;
	TempModeSwitchTrigger: F_TRIG;
		
	errorText: WSTRING(255);
	bError: BOOL;
	bSuccess: BOOL;
	iLines: UDINT;
	
	
	CalculateTemp: fbCalculateSetpoint;
	CalculateLight1: fbCalculateSetpoint;
	CalculateLight2: fbCalculateSetpoint;
	CalculateHumidity: fbCalculateSetpoint;
	CalculateDO10: fbCalculateSetpoint;
	CalculateDO11: fbCalculateSetpoint;
	
	
	
	nextLineTemp: ST_ProgramStruct;
	previousLineTemp: ST_ProgramStruct;
	
	nextLineLight1: ST_ProgramStruct;
	previousLineLight1: ST_ProgramStruct;
	
	nextLineLight2: ST_ProgramStruct;
	previousLineLight2: ST_ProgramStruct;
	
	nextLineHumidity: ST_ProgramStruct;
	previousLineHumidity: ST_ProgramStruct;
	
	nextLineDO10: ST_ProgramStruct;
	previousLineDO10: ST_ProgramStruct;
	
	nextLineDO11: ST_ProgramStruct;
	previousLineDO11: ST_ProgramStruct;
	
	//temp holder for conversion to bool
	tempVar:REAL;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//In the case that the user switches from step mode to ramp mode, we need to set the current setpoint to the current value
//Really only needed for analog values controlled by a PID
//Like temperature, humidity...maybe CO2?

TempModeSwitchTrigger(CLK:=GVL.TempStepmode);

IF TempModeSwitchTrigger.Q THEN
	GVL.TempSetpoint:=GVL.Temp;
END_IF



CASE iState OF
	
	//Check connection
	0:
		
		fbTON(PT := TIME#1S0MS);
		allOutputsSet:=FALSE;
		IF fbTON.Q=TRUE THEN
			DBConnector();
			IF DBConnector.fbSQLDatabase.bConnected THEN
				iState:=iState+1;
				fbTON.IN:=FALSE;
			END_IF
		ELSE
			fbTON.IN:=TRUE;
		END_IF
		
		
	
	1:
		//GET TEMPERATURE
		QueryProgram(sColumn:='[Temperature]');
		IF QueryProgram.bSuccess THEN
			iState:=iState+1;
			nextLineTemp:=QueryProgram.arrRecords;
			previousLineTemp:=QueryProgram.previousLine;
			
			IF QueryProgram.bEndOfProgram THEN
				nextLineTemp.iTime:=nextLineTemp.iTime+1440;
			END_IF
			
			IF bStepStart=TRUE THEN
				GVL.TempSetpoint:=GVL.Temp;
			END_IF
			
		END_IF
		
		

	
		
	2:
		//GET LIGHT 1 LEVEL
		QueryProgram(sColumn:='[Light1]');
		
		IF QueryProgram.bSuccess THEN
				iState:=iState+1;
				nextLineLight1:=QueryProgram.arrRecords;
				previousLineLight1:=QueryProgram.previousLine;
				
				IF QueryProgram.bEndOfProgram THEN
					nextLineLight1.iTime:=nextLineLight1.iTime+1440;
				END_IF
				
		END_IF
	3:
		//GET LIGHT 2 LEVEL
		QueryProgram(sColumn:='[Light2]');
		
		IF QueryProgram.bSuccess THEN
				iState:=iState+1;
				nextLineLight2:=QueryProgram.arrRecords;
				previousLineLight2:=QueryProgram.previousLine;
				
				IF QueryProgram.bEndOfProgram THEN
					nextLineLight2.iTime:=nextLineLight2.iTime+1440;
				END_IF
				
		END_IF
	4:
		//GET HUMIDITY
		QueryProgram(sColumn:='[Humidity]');
		
		IF QueryProgram.bSuccess THEN
				iState:=iState+1;
				nextLineHumidity:=QueryProgram.arrRecords;
				previousLineHumidity:=QueryProgram.previousLine;
				
				IF QueryProgram.bEndOfProgram THEN
					nextLineHumidity.iTime:=nextLineHumidity.iTime+1440;
				END_IF
				
		END_IF
	5:
		//DIGITAL OUT 10
		QueryProgram(sColumn:='[DigitalOut10]');
		
		IF QueryProgram.bSuccess THEN
				iState:=iState+1;
				nextLineDO10:=QueryProgram.arrRecords;
				previousLineDO10:=QueryProgram.previousLine;
				
				IF QueryProgram.bEndOfProgram THEN
					nextLineDO10.iTime:=nextLineLight2.iTime+1440;
				END_IF
				
		END_IF
	6:
		//DIGITAL OUT 11
		QueryProgram(sColumn:='[DigitalOut11]');
		
		IF QueryProgram.bSuccess THEN
				iState:=iState+1;
				nextLineDO11:=QueryProgram.arrRecords;
				previousLineDO11:=QueryProgram.previousLine;
				
				IF QueryProgram.bEndOfProgram THEN
					nextLineDO11.iTime:=nextLineLight2.iTime+1440;
				END_IF
				
		END_IF
	
		
	7:
	//Success!
	allOutputsSet:=TRUE;
	iState:=0;
		

END_CASE


//Using the setpoints we just got above,
//Calculate what the target setpoint is based on
//If we're in ramp mode, step mode, what time it is, etc
CalculateTemp(
	currentValue:=GVL.Temp,
	nextSetpointValue:= nextLineTemp.Temperature, 
	nextSetpointTime:= nextLineTemp.iTime, 
	currentSetpoint:= GVL.TempSetpoint,
	previousSetpoint:=previousLineTemp.Temperature,
	previousSetpointTime:=previousLineTemp.iTime,
	stepMode:= GVL.TempStepmode, 
	setpoint=> GVL.TempSetpoint,
	bStepStart:=FALSE,
	);
	
	
CalculateLight1(
		currentValue:=GVL.Light1Percent,
		nextSetpointValue:= nextLineLight1.Light1, 
		nextSetpointTime:= nextLineLight1.iTime, 
		currentSetpoint:= GVL.Light1Percent,
		previousSetpoint:=previousLineLight1.Light1,
		previousSetpointTime:=previousLineLight1.iTime, 
		stepMode:= GVL.Light1Stepmode, 
		setpoint=> GVL.Light1Percent,
		bStepStart:=bStepStart);
		
fbScaleValue(rInputPercent:=GVL.Light1Percent,rMaxValue:=GVL.Light1Max,iScaled=>GVL.Light1Level);

CalculateLight2(
		currentValue:=GVL.Light2Percent,
		nextSetpointValue:= nextLineLight2.Light2, 
		nextSetpointTime:= nextLineLight2.iTime, 
		currentSetpoint:= GVL.Light2Percent,
		previousSetpoint:=previousLineLight2.Light2,
		previousSetpointTime:=previousLineLight2.iTime, 
		stepMode:= GVL.Light2Stepmode, 
		setpoint=> GVL.Light2Percent,
		bStepStart:=bStepStart);
		
fbScaleValue(rInputPercent:=GVL.Light2Percent,rMaxValue:=GVL.Light2Max,iScaled=>GVL.Light2Level);

CalculateHumidity(
		currentValue:=GVL.Humidity,
		nextSetpointValue:= nextLineHumidity.humidity, 
		nextSetpointTime:= nextLineHumidity.iTime, 
		currentSetpoint:= GVL.HumiditySetpoint,
		previousSetpoint:=previousLineHumidity.humidity,
		previousSetpointTime:=previousLineHumidity.iTime, 
		stepMode:= GVL.HumidityStepmode, 
		setpoint=> GVL.HumiditySetpoint,
		bStepStart:=bStepStart);

	
CalculateDO10(
		currentValue:=BOOL_TO_REAL(IO_VARS.AUX2),
		nextSetpointValue:= BOOL_TO_REAL(nextLineDO10.DO10), 
		nextSetpointTime:= nextLineDO10.iTime, 
		currentSetpoint:= BOOL_TO_REAL(IO_VARS.AUX2),
		previousSetpoint:=BOOL_TO_REAL(previousLineDO10.DO10),
		previousSetpointTime:=previousLineDO10.iTime, 
		stepMode:= TRUE,//Digital Auxillaries are always step mode 
		setpoint=> tempVar,
		bStepStart:=bStepStart);
		
IO_VARS.AUX2:=REAL_TO_BOOL(tempVar);
		
CalculateDO11(
		currentValue:=BOOL_TO_REAL(IO_VARS.AUX3),
		nextSetpointValue:= BOOL_TO_REAL(nextLineDO11.DO11), 
		nextSetpointTime:= nextLineDO11.iTime, 
		currentSetpoint:= BOOL_TO_REAL(IO_VARS.AUX3),
		previousSetpoint:=BOOL_TO_REAL(previousLineDO11.DO11),
		previousSetpointTime:=previousLineDO11.iTime, 
		stepMode:= TRUE,//Digital Auxillaries are always step mode 
		setpoint=> tempVar,
		bStepStart:=bStepStart);
		
IO_VARS.AUX3:=REAL_TO_BOOL(tempVar);]]></ST>
    </Implementation>
    <LineIds Name="DatabaseStateMachine">
      <LineId Id="162" Count="7" />
      <LineId Id="102" Count="0" />
      <LineId Id="174" Count="1" />
      <LineId Id="8" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="200" Count="0" />
      <LineId Id="115" Count="0" />
      <LineId Id="289" Count="0" />
      <LineId Id="116" Count="0" />
      <LineId Id="410" Count="0" />
      <LineId Id="123" Count="2" />
      <LineId Id="122" Count="0" />
      <LineId Id="120" Count="1" />
      <LineId Id="114" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="110" Count="0" />
      <LineId Id="109" Count="0" />
      <LineId Id="21" Count="1" />
      <LineId Id="24" Count="0" />
      <LineId Id="146" Count="0" />
      <LineId Id="326" Count="0" />
      <LineId Id="328" Count="2" />
      <LineId Id="370" Count="0" />
      <LineId Id="372" Count="2" />
      <LineId Id="327" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="226" Count="2" />
      <LineId Id="129" Count="0" />
      <LineId Id="127" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="156" Count="0" />
      <LineId Id="104" Count="0" />
      <LineId Id="111" Count="0" />
      <LineId Id="105" Count="2" />
      <LineId Id="147" Count="0" />
      <LineId Id="334" Count="0" />
      <LineId Id="332" Count="1" />
      <LineId Id="331" Count="0" />
      <LineId Id="325" Count="0" />
      <LineId Id="103" Count="0" />
      <LineId Id="565" Count="13" />
      <LineId Id="447" Count="12" />
      <LineId Id="640" Count="0" />
      <LineId Id="668" Count="12" />
      <LineId Id="654" Count="0" />
      <LineId Id="682" Count="12" />
      <LineId Id="681" Count="0" />
      <LineId Id="695" Count="0" />
      <LineId Id="710" Count="0" />
      <LineId Id="285" Count="3" />
      <LineId Id="159" Count="1" />
      <LineId Id="10" Count="0" />
      <LineId Id="519" Count="1" />
      <LineId Id="233" Count="0" />
      <LineId Id="521" Count="1" />
      <LineId Id="234" Count="9" />
      <LineId Id="232" Count="0" />
      <LineId Id="244" Count="0" />
      <LineId Id="246" Count="11" />
      <LineId Id="245" Count="0" />
      <LineId Id="583" Count="11" />
      <LineId Id="582" Count="0" />
      <LineId Id="467" Count="10" />
      <LineId Id="713" Count="0" />
      <LineId Id="712" Count="0" />
      <LineId Id="728" Count="8" />
      <LineId Id="726" Count="0" />
      <LineId Id="743" Count="2" />
      <LineId Id="747" Count="8" />
      <LineId Id="746" Count="0" />
      <LineId Id="761" Count="1" />
    </LineIds>
  </POU>
</TcPlcObject>